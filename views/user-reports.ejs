<!DOCTYPE html>
<html lang="sw">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Ripoti za <%= username %></title>
<link rel="stylesheet" href="/dashboard.css">
<style>
  /* Extra styles for user page */
  .user-header {
    display: flex;
    align-items: center;
    gap: 15px;
    margin-bottom: 20px;
  }
  .user-header img {
    width: 60px;
    height: 60px;
    border-radius: 50%;
    object-fit: cover;
  }
  .user-header .stats {
    display: flex;
    gap: 15px;
  }
  .report-card img.report-image {
    margin-top: 10px;
    border-radius: 8px;
  }
  .comment-avatar {
    width: 35px;
    height: 35px;
    border-radius: 50%;
    object-fit: cover;
    margin-right: 8px;
  }
  .comment-item {
    display: flex;
    align-items: center;
    gap: 5px;
    margin-bottom: 5px;
  }
  .avatar-upload {
    margin-top: 10px;
  }
</style>
</head>
<body>
<nav>
  <h1>Ripoti za Kliniki</h1>
  <div class="nav-actions">
    <span>Umeingia kama: <strong><%= loggedInUser %></strong></span>
    <button onclick="location.href='/dashboard.html'">Nyumbani</button>
    <button onclick="location.href='/logout'">Toka</button>
  </div>
</nav>

<div class="container">
  <!-- User header -->
  <div class="user-header">
    <img id="userAvatar" src="" alt="Avatar">
    <div>
      <h2>Unaangalia ripoti za <%= username %></h2>
      <div class="stats">
        <span id="totalPosts">0 Ripoti</span>
        <span id="totalThumbsUp">0 üëç</span>
        <span id="totalThumbsDown">0 üëé</span>
      </div>
      <% if (username === loggedInUser) { %>
      <form id="avatarForm" class="avatar-upload">
        <input type="file" name="avatar" accept="image/*" required>
        <button type="submit">Update Avatar</button>
      </form>
      <% } %>
    </div>
  </div>

  <!-- Reports grid -->
  <div id="reports-container" class="reports-grid"></div>
</div>

<template id="report-template">
  <div class="card report-card">
    <div class="card-header">
      <img class="report-avatar" src="" alt="Avatar">
      <h3 class="report-title"></h3>
      <p class="report-meta"></p>
    </div>
    <div class="card-body">
      <p class="report-description"></p>
      <img class="report-image" src="" alt="" style="display:none;">
    </div>
    <div class="card-footer">
      <div class="report-thumbs">
        üëç <span class="thumbs-up">0</span> |
        üëé <span class="thumbs-down">0</span>
      </div>
      <div class="report-comments">
        <h4>Maoni:</h4>
        <ul class="comments-list"></ul>
        <form class="comment-form">
          <input type="text" name="comment" placeholder="Andika maoni..." required>
          <button type="submit">Tuma</button>
        </form>
      </div>
    </div>
  </div>
</template>

<script>
const username = "<%= username %>";
const loggedInUser = "<%= loggedInUser %>";
const reportsContainer = document.getElementById('reports-container');
const reportTemplate = document.getElementById('report-template');
const userAvatarImg = document.getElementById('userAvatar');

// Fetch user's avatar
async function fetchAvatar() {
  try {
    const res = await fetch('/api/users');
    const data = await res.json();
    const user = data.find(u => u.toLowerCase() === username.toLowerCase());
    if(user && user.avatar) userAvatarImg.src = user.avatar;
    else userAvatarImg.src = '/default-avatar.png';
  } catch(err) {
    console.error(err);
    userAvatarImg.src = '/default-avatar.png';
  }
}

// Avatar update
const avatarForm = document.getElementById('avatarForm');
if(avatarForm) {
  avatarForm.addEventListener('submit', async e => {
    e.preventDefault();
    const fileInput = avatarForm.avatar;
    const formData = new FormData();
    formData.append('avatar', fileInput.files[0]);
    try {
      const res = await fetch('/api/avatar', { method:'POST', body: formData });
      const data = await res.json();
      userAvatarImg.src = data.avatar;
      alert("Avatar updated!");
    } catch(err) {
      console.error(err);
      alert("Tatizo ku-update avatar");
    }
  });
}

// Fetch reports
async function fetchReports() {
  try {
    const res = await fetch(`/api/reports?username=${encodeURIComponent(username)}`);
    const data = await res.json();
    displayReports(data.reports);
    updateStats(data.reports);
  } catch (err) {
    console.error("Error fetching reports:", err);
    reportsContainer.innerHTML = "<p>Kuna tatizo kupata ripoti.</p>";
  }
}

// Update totals
function updateStats(reports) {
  const totalPosts = reports.length;
  const totalThumbsUp = reports.reduce((acc, r) => acc + r.thumbs_up, 0);
  const totalThumbsDown = reports.reduce((acc, r) => acc + r.thumbs_down, 0);
  document.getElementById('totalPosts').textContent = `${totalPosts} Ripoti`;
  document.getElementById('totalThumbsUp').textContent = `${totalThumbsUp} üëç`;
  document.getElementById('totalThumbsDown').textContent = `${totalThumbsDown} üëé`;
}

// Display reports
function displayReports(reports) {
  reportsContainer.innerHTML = "";
  reports.forEach(r => {
    const clone = reportTemplate.content.cloneNode(true);
    clone.querySelector(".report-title").textContent = r.title || "Hakuna title";
    clone.querySelector(".report-meta").textContent = `${r.username} - ${r.clinic} | ${r.timestamp}`;
    clone.querySelector(".report-description").textContent = r.description || "";
    
    const img = clone.querySelector(".report-image");
    if (r.image) { img.src = r.image; img.style.display = "block"; }

    clone.querySelector(".thumbs-up").textContent = r.thumbs_up || 0;
    clone.querySelector(".thumbs-down").textContent = r.thumbs_down || 0;

    // Disable thumbs for owner
    if(loggedInUser.toLowerCase() === username.toLowerCase()) {
      clone.querySelector(".thumbs-up").parentNode.style.pointerEvents = "none";
    }

    clone.querySelector(".report-avatar").src = r.avatar || '/default-avatar.png';

    const commentsList = clone.querySelector(".comments-list");
    r.comments.forEach(c => {
      const li = document.createElement("li");
      li.classList.add("comment-item");
      const img = document.createElement("img");
      img.classList.add("comment-avatar");
      img.src = c.avatar || '/default-avatar.png';
      li.appendChild(img);
      li.appendChild(document.createTextNode(`${c.username} (${c.timestamp}): ${c.comment}`));
      commentsList.appendChild(li);
    });

    // Live comment posting
    const commentForm = clone.querySelector(".comment-form");
    commentForm.addEventListener("submit", async e => {
      e.preventDefault();
      const input = commentForm.comment;
      if (!input.value.trim()) return;
      try {
        const res = await fetch(`/api/comments/${r.id}`, {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ comment: input.value.trim() })
        });
        if (!res.ok) throw new Error("Tatizo ku-tuma comment");
        const newComment = await res.json();
        const li = document.createElement("li");
        li.classList.add("comment-item");
        const img = document.createElement("img");
        img.classList.add("comment-avatar");
        img.src = '/default-avatar.png';
        li.appendChild(img);
        li.appendChild(document.createTextNode(`${newComment.username} (${newComment.timestamp}): ${newComment.comment}`));
        commentsList.prepend(li);
        input.value = "";
      } catch(err) {
        console.error(err);
        alert("Tatizo ku-tuma comment");
      }
    });

    reportsContainer.appendChild(clone);
  });
}

fetchAvatar();
fetchReports();
</script>
</body>
</html>
