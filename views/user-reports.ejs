<!DOCTYPE html>
<html lang="sw">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Ripoti za <%= username %></title>
  <link rel="stylesheet" href="/dashboard.css">
  <style>
    .thumb-up.active { color: green; font-weight: bold; }
    .thumb-down.active { color: red; font-weight: bold; }
    .report-thumbs span { cursor: pointer; user-select: none; margin-right: 10px; }
    .pagination { margin-top: 20px; text-align: center; }
    .pagination button { margin: 0 5px; padding: 5px 10px; cursor: pointer; }
    .pagination button.active { font-weight: bold; background-color: #eee; }
  </style>
</head>
<body>
  <nav class="navbar">
    <a href="/dashboard.html">Nyumbani</a>
    <a href="/logout">Logout</a>
    <span style="margin-left:20px;">Umeingia kama: <strong><%= loggedInUser %></strong></span>
  </nav>

  <div class="container">
    <h2>Ukitembelea <%= username %> | Ripoti zake</h2>
    <div id="reports-container" class="reports-grid"></div>
    <div class="pagination" id="pagination"></div>
  </div>

  <template id="report-template">
    <div class="card report-card">
      <div class="card-header">
        <h3 class="report-title"></h3>
        <p class="report-meta"></p>
      </div>
      <div class="card-body">
        <p class="report-description"></p>
        <img class="report-image" src="" alt="" style="max-width:100%; display:none; margin-top:10px;">
      </div>
      <div class="card-footer">
        <div class="report-thumbs">
          <span class="thumb-up">üëç <span class="thumbs-up">0</span></span>
          <span class="thumb-down">üëé <span class="thumbs-down">0</span></span>
        </div>
        <div class="report-comments">
          <h4>Maoni:</h4>
          <ul class="comments-list"></ul>
          <form class="comment-form">
            <input type="text" name="comment" placeholder="Andika maoni..." required>
            <button type="submit">Tuma</button>
          </form>
        </div>
      </div>
    </div>
  </template>

  <script>
    const username = "<%= username %>";
    const loggedInUser = "<%= loggedInUser %>";
    const reportsContainer = document.getElementById('reports-container');
    const paginationContainer = document.getElementById('pagination');
    const reportTemplate = document.getElementById('report-template');

    let currentPage = 1;
    const limit = 10;
    let totalPages = 1;

    async function fetchReports(page = 1) {
      try {
        const res = await fetch(`/api/reports?username=${encodeURIComponent(username)}&page=${page}&limit=${limit}`);
        const data = await res.json();
        totalPages = data.totalPages || 1;
        displayReports(data.reports);
        setupPagination();
      } catch (err) {
        console.error("Error fetching reports:", err);
        reportsContainer.innerHTML = "<p>Kuna tatizo kupata ripoti.</p>";
      }
    }

    function displayReports(reports) {
      reportsContainer.innerHTML = "";
      reports.forEach(r => {
        const clone = reportTemplate.content.cloneNode(true);

        clone.querySelector(".report-title").textContent = r.title || "Hakuna title";
        clone.querySelector(".report-meta").textContent = `${r.username} - ${r.clinic} | ${r.timestamp}`;
        clone.querySelector(".report-description").textContent = r.description || "";

        const img = clone.querySelector(".report-image");
        if (r.image) {
          img.src = r.image;
          img.style.display = "block";
        }

        const thumbsUp = clone.querySelector(".thumbs-up");
        const thumbsDown = clone.querySelector(".thumbs-down");
        const thumbUpSpan = clone.querySelector(".thumb-up");
        const thumbDownSpan = clone.querySelector(".thumb-down");

        thumbsUp.textContent = r.thumbs_up || 0;
        thumbsDown.textContent = r.thumbs_down || 0;

        const commentsList = clone.querySelector(".comments-list");
        r.comments.forEach(c => {
          const li = document.createElement("li");
          li.textContent = `${c.username} (${c.timestamp}): ${c.comment}`;
          commentsList.appendChild(li);
        });

        // Comment submission
        const commentForm = clone.querySelector(".comment-form");
        commentForm.addEventListener("submit", async (e) => {
          e.preventDefault();
          const input = commentForm.comment;
          if (!input.value.trim()) return;

          try {
            const res = await fetch(`/api/comments/${r.id}`, {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify({ comment: input.value.trim() })
            });
            if (!res.ok) throw new Error("Tatizo ku-tuma comment");
            const newComment = await res.json();

            const li = document.createElement("li");
            li.textContent = `${newComment.username} (${newComment.timestamp}): ${newComment.comment}`;
            commentsList.prepend(li);
            input.value = "";
          } catch (err) {
            console.error(err);
            alert("Tatizo ku-tuma comment");
          }
        });

        thumbUpSpan.addEventListener("click", () => react(r.id, 'up', thumbUpSpan, thumbDownSpan, thumbsUp, thumbsDown));
        thumbDownSpan.addEventListener("click", () => react(r.id, 'down', thumbUpSpan, thumbDownSpan, thumbsUp, thumbsDown));

        reportsContainer.appendChild(clone);
      });
    }

    function setupPagination() {
      paginationContainer.innerHTML = "";
      if (totalPages <= 1) return;

      const prevBtn = document.createElement("button");
      prevBtn.textContent = "Previous";
      prevBtn.disabled = currentPage === 1;
      prevBtn.addEventListener("click", () => { if(currentPage>1){ currentPage--; fetchReports(currentPage); } });
      paginationContainer.appendChild(prevBtn);

      for (let i = 1; i <= totalPages; i++) {
        const btn = document.createElement("button");
        btn.textContent = i;
        btn.classList.toggle("active", i === currentPage);
        btn.addEventListener("click", () => {
          currentPage = i;
          fetchReports(currentPage);
        });
        paginationContainer.appendChild(btn);
      }

      const nextBtn = document.createElement("button");
      nextBtn.textContent = "Next";
      nextBtn.disabled = currentPage === totalPages;
      nextBtn.addEventListener("click", () => { if(currentPage<totalPages){ currentPage++; fetchReports(currentPage); } });
      paginationContainer.appendChild(nextBtn);
    }

    async function react(reportId, type, thumbUpSpan, thumbDownSpan, thumbsUp, thumbsDown) {
      try {
        const res = await fetch(`/api/reactions/${reportId}`, {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ type })
        });
        if (!res.ok) {
          const msg = await res.text();
          alert(msg || "Tatizo kutoa thumbs");
          return;
        }
        const data = await res.json();
        thumbsUp.textContent = data.thumbs_up;
        thumbsDown.textContent = data.thumbs_down;

        thumbUpSpan.classList.toggle('active', type === 'up');
        thumbDownSpan.classList.toggle('active', type === 'down');
      } catch (err) {
        console.error(err);
        alert("Tatizo kutoa thumbs");
      }
    }

    fetchReports(currentPage);
  </script>
</body>
</html>
