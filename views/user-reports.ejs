<!DOCTYPE html>
<html lang="sw">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Ripoti za <%= username %></title>
<link rel="stylesheet" href="/css/user-reports.css">
<script>
  window.USERNAME = "<%= username %>";
  window.LOGGED_IN_USER = "<%= loggedInUser %>";
</script>
<script src="/js/user-reports.js"></script>
<style>
  /* Ensure nav-actions is positioned */
.nav-actions {
  display: flex;
  align-items: center;
  gap: 10px;
  flex-wrap: wrap;
  position: relative; /* needed for dropdown absolute positioning */
  z-index: 1000;
}

/* Mention bell */
#mention-bell {
  position: relative;
  cursor: pointer;
  font-size: 24px;
  padding: 6px;
  border-radius: 50%;
  background: rgba(255,255,255,0.2);
  transition: background 0.3s ease;
}

#mention-bell:hover { background: rgba(255,255,255,0.3); }

#mention-count {
  position: absolute;
  top: -5px;
  right: -5px;
  background: #ff2c2c;
  color: white;
  width: 20px;
  height: 20px;
  font-size: 12px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: bold;
  border-radius: 50%;
  animation: pulse 1.5s infinite;
}

@keyframes pulse {
  0% { transform: scale(1); opacity:1; }
  50% { transform: scale(1.3); opacity:0.7; }
  100% { transform: scale(1); opacity:1; }
}

/* Mentions dropdown */
#mentions-dropdown {
  display: none;          /* hide by default */
  position: absolute;
  top: 130%;              /* below the bell */
  right: 0;
  width: 90vw;
  max-width: 360px;
  max-height: 400px;
  background: #fff;
  border: 1px solid #ccc;
  border-radius: 8px;
  box-shadow: 0 6px 20px rgba(0,0,0,0.2);
  overflow-y: auto;
  z-index: 10000;         /* float above nav */
  transition: opacity 0.3s ease, transform 0.2s ease;
  transform: translateY(-5px);
  opacity: 0;
}

/* Open state */
#mentions-dropdown.open {
  display: block;
  transform: translateY(0);
  opacity: 1;
}

/* List items */
#mentions-dropdown ul {
  list-style: none;
  margin: 0;
  padding: 8px 0;
}

#mentions-dropdown li {
  display: flex;
  align-items: flex-start;
  gap: 10px;
  padding: 10px 16px;
  cursor: pointer;
  transition: background 0.2s;
  border-bottom: 1px solid #f0f2f5;
}

#mentions-dropdown li:last-child { border-bottom: none; }

#mentions-dropdown li:hover { background: #f0f2f5; }

.mention-avatar { width: 36px; height: 36px; border-radius: 50%; object-fit: cover; }

.mention-user-link { font-weight: bold; color: #405DE6; text-decoration: none; }
.mention-user-link:hover { text-decoration: underline; }

.mention-comment-link { color: #333; text-decoration: underline; cursor: pointer; display: block; margin-top: 4px; font-size: 0.9rem; }

.mention-text { line-height: 1.3; font-size: 14px; }

/* Highlight comment */
.highlight { background-color: #fff3b0; transition: background-color 1.5s ease; }

/* Mobile responsive */
@media (max-width: 480px) {
  #mentions-dropdown { right: 5px; left: 5px; width: auto; }
}


/* Overlay dropdown for small screens */
@media (max-width: 768px) {
  #mentions-dropdown {
    position: fixed;      /* float above everything */
    top: 60px;            /* distance from top nav */
    right: 10px;
    left: 10px;
    width: auto;
    max-width: none;
    max-height: 70vh;     /* use viewport height */
    border-radius: 10px;
    z-index: 20000;
    box-shadow: 0 8px 24px rgba(0,0,0,0.3);
    transform: translateY(-10px);
    opacity: 0;
    transition: transform 0.3s ease, opacity 0.3s ease;
  }


.mention-text {
  display: flex;
  flex-direction: column;
  font-size: 14px;
  color: #444;
}

.mention-text span {
  color: #555;
  margin: 2px 0;
}

.mention-comment-link {
  color: #111;
  font-style: italic;
  margin-top: 2px;
  text-decoration: none;
}

.mention-comment-link:hover {
  text-decoration: underline;
}
.modal {
  display: none; /* hidden by default */
  position: fixed;
  z-index: 30000;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: auto;
  background-color: rgba(0,0,0,0.5);
}

.modal-content {
  background-color: #fff;
  margin: 10% auto;
  padding: 20px;
  border-radius: 8px;
  width: 90%;
  max-width: 600px;
  position: relative;
}

.close-modal {
  position: absolute;
  top: 10px;
  right: 15px;
  font-size: 28px;
  font-weight: bold;
  cursor: pointer;
}
.mention-date {
  font-size: 12px;
  color: #888;
  margin-top: 4px;
}
  #mentions-dropdown.open {
    transform: translateY(0);
    opacity: 1;
    display: block;
  }
}

</style>
</head>
<body> 

<nav>
  <h1>Ripoti za <%= username %></h1>
  <div class="nav-actions">
    <span>Umeingia kama: <strong><%= loggedInUser %></strong></span>
    <button onclick="location.href='/dashboard.html'">Nyumbani</button>
    <button onclick="location.href='/logout'">Toka</button>

    <span id="mention-bell">üîî <span id="mention-count"><%= mentions.length %></span></span>

    <div id="mentions-dropdown">
      <ul id="mentionList">
        <% mentions.forEach(m => { %>
        <li>
          <img src="https://ui-avatars.com/api/?name=<%= m.from_user %>" class="mention-avatar" alt="avatar">
          <div class="mention-text">
            <a href="/user/<%= m.from_user %>" class="mention-user-link">@<%= m.from_user %></a>
            <span> alikutaja katika ripoti ya </span>
            <a href="#" class="mention-comment-link" data-report-id="<%= m.report_id %>" data-comment-id="<%= m.comment_id %>">"<%= m.comment %>"</a>
            <div class="mention-date"><%= formatTanzaniaTime(m.created_at) %></div>
          </div>
        </li>
        <% }) %>
      </ul>
    </div>
  </div>
</nav>

<div class="container">
  <div class="reports-grid">
    <% reports.forEach(r => { %>
    <div class="report-card" id="report-<%= r.id %>">
      <h3><%= r.title %></h3>
      <p><%= r.description %></p>
      <% if(r.image){ %><img src="<%= r.image %>" alt="report image"><% } %>
      <div class="reactions">
        üëç <span class="thumbs-up"><%= r.thumbs_up || 0 %></span>
        üëé <span class="thumbs-down"><%= r.thumbs_down || 0 %></span>
      </div>
    </div>
    <% }) %>
  </div>
</div>

<!-- Report Modal -->
<div id="report-modal" class="modal">
  <div class="modal-content">
    <span class="close-modal">&times;</span>
    <div id="modal-report-content"></div>
  </div>
</div>

<script>
document.addEventListener("DOMContentLoaded", () => {
  const bell = document.getElementById("mention-bell");
  const dropdown = document.getElementById("mentions-dropdown");
  const modal = document.getElementById("report-modal");
  const modalContent = document.getElementById("modal-report-content");

  const formatTanzaniaTime = (ts) => new Date(ts).toLocaleString("en-KE", { timeZone: "Africa/Nairobi" });

  // Toggle mentions dropdown
  bell.addEventListener("click", e => { e.stopPropagation(); dropdown.classList.toggle("open"); });
  document.addEventListener("click", e => { if (!dropdown.contains(e.target) && !bell.contains(e.target)) dropdown.classList.remove("open"); });

  // Open report modal from mention
  dropdown.addEventListener("click", async e => {
    const link = e.target.closest(".mention-comment-link"); 
    if(!link) return;
    e.preventDefault(); dropdown.classList.remove("open");

    const reportId = link.dataset.reportId;
    const commentId = link.dataset.commentId;

    try {
      const res = await fetch(`/api/reports/${reportId}`, { headers: { "X-Requested-With": "XMLHttpRequest" } });
      if(!res.ok) throw new Error("Failed to fetch report");
      const data = await res.json();

      let html = `<h3>${data.report.title}</h3><p>${data.report.description}</p>`;
      if(data.report.image) html += `<img src="${data.report.image}" style="max-width:100%">`;
      html += `<div class="reactions">üëç <span>${data.report.thumbs_up || 0}</span> üëé <span>${data.report.thumbs_down || 0}</span></div>`;
      html += `<div class="comments"><h4>Maoni:</h4>`;

      data.comments.forEach(c => {
        const avatar = `https://ui-avatars.com/api/?name=${c.username}`;
        html += `<div class="comment" id="comment-${c.id}">
                  <img src="${avatar}" class="mention-avatar">
                  <div class="mention-text">
                    <a class="mention-user-link">@${c.username}</a>: ${c.comment}
                    <div class="comment-time">${formatTanzaniaTime(c.timestamp)}</div>
                    <div class="comment-reactions">
                      <button class="thumbs-up-btn" data-comment-id="${c.id}">üëç <span class="count">${c.thumbs_up || 0}</span></button>
                      <button class="thumbs-down-btn" data-comment-id="${c.id}">üëé <span class="count">${c.thumbs_down || 0}</span></button>
                    </div>
                    <div class="reply-box">
                      <input type="text" class="reply-input" data-comment-id="${c.id}" placeholder="Andika jibu...">
                      <button class="reply-btn" data-comment-id="${c.id}">Tuma</button>
                    </div>
                  </div>
                </div>`;
      });
      html += `</div>`;
      modalContent.innerHTML = html; modal.style.display = "block";

      if(commentId){
        const commentEl = modalContent.querySelector(`#comment-${commentId}`);
        if(commentEl){ commentEl.scrollIntoView({behavior:"smooth",block:"center"}); commentEl.classList.add("highlight"); setTimeout(()=>commentEl.classList.remove("highlight"),2000);}
      }

    } catch(err){ console.error(err); alert("Tatizo kufungua ripoti hii. Jaribu tena."); }
  });

  // Close modal
  modal.querySelector(".close-modal").addEventListener("click",()=>{modal.style.display="none";modalContent.innerHTML="";});
  window.addEventListener("click", e=>{if(e.target===modal){modal.style.display="none";modalContent.innerHTML="";}});

  // Handle reactions & replies
  modalContent.addEventListener("click", async e=>{
    const upBtn = e.target.closest(".thumbs-up-btn");
    const downBtn = e.target.closest(".thumbs-down-btn");
    const replyBtn = e.target.closest(".reply-btn");

    if(upBtn || downBtn){
      const btn = upBtn||downBtn;
      const type = upBtn?"up":"down";
      const commentId = btn.dataset.commentId;
      try{
        const res = await fetch(`/api/comments/${commentId}/reactions`,{
          method:"POST", headers:{"Content-Type":"application/json"}, body:JSON.stringify({type})
        });
        if(!res.ok) throw new Error("Reaction failed");
        const span = btn.querySelector(".count");
        span.textContent = parseInt(span.textContent||0)+1;
      }catch(err){ console.error(err);}
    }

    if(replyBtn){
      const commentId = replyBtn.dataset.commentId;
      const input = modalContent.querySelector(`.reply-input[data-comment-id="${commentId}"]`);
      const replyText = input.value.trim();
      if(!replyText) return;
      try{
        const res = await fetch(`/api/comments/${commentId}/reply`,{
          method:"POST", headers:{"Content-Type":"application/json"}, body:JSON.stringify({reply: replyText})
        });
        if(!res.ok) throw new Error("Reply failed");
        // Append new reply
        const commentEl = modalContent.querySelector(`#comment-${commentId}`);
        const newReply = document.createElement("div");
        newReply.className = "comment reply";
        newReply.innerHTML = `<a class="mention-user-link">@${window.LOGGED_IN_USER}</a>: ${replyText} <div class="comment-time">${formatTanzaniaTime(new Date())}</div>`;
        commentEl.appendChild(newReply);
        input.value = "";
      }catch(err){ console.error(err);}
    }
  });

});
</script>

</body>
</html>     
    
    


