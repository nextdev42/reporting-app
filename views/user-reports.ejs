<!DOCTYPE html>
<html lang="sw">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Ripoti za <%= username %></title>
  <link rel="stylesheet" href="/dashboard.css">
</head>
<body>
  <nav>
    <a href="/dashboard.html">Nyumbani</a>
    <a href="/logout">Logout</a>
  </nav>

  <div class="container">
    <h2>Ripoti za <%= username %></h2>
    <div id="reports-container"></div>
  </div>

  <template id="report-template">
    <div class="report">
      <h3 class="report-title"></h3>
      <p class="report-meta"></p>
      <p class="report-description"></p>
      <img class="report-image" src="" alt="" style="max-width:300px; display:none;">
      <div class="report-thumbs">
        üëç <span class="thumbs-up">0</span> |
        üëé <span class="thumbs-down">0</span>
      </div>
      <div class="report-comments">
        <h4>Maoni:</h4>
        <ul class="comments-list"></ul>
        <form class="comment-form">
          <input type="text" name="comment" placeholder="Andika maoni..." required>
          <button type="submit">Tuma</button>
        </form>
      </div>
    </div>
  </template>

  <script>
    const username = "<%= username %>";
    const reportsContainer = document.getElementById('reports-container');
    const reportTemplate = document.getElementById('report-template');

    async function fetchReports() {
      try {
        const res = await fetch(`/api/reports?username=${encodeURIComponent(username)}`);
        const data = await res.json();
        displayReports(data.reports);
      } catch (err) {
        console.error("Error fetching reports:", err);
        reportsContainer.innerHTML = "<p>Kuna tatizo kupata ripoti.</p>";
      }
    }

    function displayReports(reports) {
      reportsContainer.innerHTML = "";
      reports.forEach(r => {
        const clone = reportTemplate.content.cloneNode(true);
        const reportEl = clone.querySelector(".report");

        clone.querySelector(".report-title").textContent = r.title || "No Title";
        clone.querySelector(".report-meta").textContent = `${r.username} - ${r.clinic} | ${r.timestamp}`;
        clone.querySelector(".report-description").textContent = r.description || "";

        const img = clone.querySelector(".report-image");
        if (r.image) {
          img.src = r.image;
          img.style.display = "block";
        }

        clone.querySelector(".thumbs-up").textContent = r.thumbs_up || 0;
        clone.querySelector(".thumbs-down").textContent = r.thumbs_down || 0;

        const commentsList = clone.querySelector(".comments-list");
        r.comments.forEach(c => {
          const li = document.createElement("li");
          li.textContent = `${c.username} (${c.timestamp}): ${c.comment}`;
          commentsList.appendChild(li);
        });

        // Live comment posting
        const commentForm = clone.querySelector(".comment-form");
        commentForm.addEventListener("submit", async (e) => {
          e.preventDefault();
          const input = commentForm.comment;
          if (!input.value.trim()) return;

          try {
            const res = await fetch(`/api/comments/${r.id}`, {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify({ comment: input.value.trim() })
            });
            if (!res.ok) throw new Error("Error posting comment");
            const newComment = await res.json();

            const li = document.createElement("li");
            li.textContent = `${newComment.username} (${newComment.timestamp}): ${newComment.comment}`;
            commentsList.prepend(li); // show newest first
            input.value = "";
          } catch (err) {
            console.error(err);
            alert("Tatizo ku-tuma comment");
          }
        });

        reportsContainer.appendChild(clone);
      });
    }

    fetchReports();
  </script>
</body>
</html>
